<?php

/**
 * @file
 * Installation code for the activity_creator module.
 */

/**
 * Implements hook_schema().
 */
function activity_creator_schema() {
  $schema['activity_notification_status'] = [
    'fields' => [
      'uid' => [
        'description' => 'The {user}.uid of user.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ],
      'aid' => [
        'description' => 'The {activity}.id of activity.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ],
      'status' => [
        'description' => 'The activity status.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 1,
      ],
    ],
    'indexes' => [
      'ans_uid' => ['uid'],
      'ans_aid' => ['aid'],
      'ans_uid_aid' => ['uid', 'aid'],
      'ans_status' => ['status'],
    ],
  ];

  return $schema;
}

/**
 * Implements hook_update_dependencies().
 */
function activity_creator_update_dependencies(): array {
  // Ensure configurations updates runs after the group migration has completed.
  $dependencies['activity_creator'][13000] = [
    'social_group' => 13000,
  ];

  return $dependencies;
}

/**
 * Implements hook_update_last_removed().
 */
function activity_creator_update_last_removed() : int {
  return 8802;
}

/**
 * Remove deprecated group types.
 */
function activity_creator_update_13000(): ?string {
  // Allow platforms to opt out of the group migration, for example if they want
  // to build it themselves and take more scenario's into account than common
  // Open Social installations will have.
  if (\Drupal::state()->get('social_group_group_type_migration_opt_out', FALSE)) {
    \Drupal::logger('social_group')->info('Platform has opted out of group migration.');
    return NULL;
  }

  /** @var \Drupal\update_helper\Updater $updateHelper */
  $updateHelper = \Drupal::service('update_helper.updater');

  // Execute configuration update definitions with logging of success.
  $updateHelper->executeUpdate('activity_creator', __FUNCTION__);

  // Output logged messages to a related channel of update execution.
  return $updateHelper->logger()->output();
}
